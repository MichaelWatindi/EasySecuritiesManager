// <auto-generated />
using System;
using EasySecuritiesManager.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EasySecuritiesManager.EntityFramework.Migrations
{
    [DbContext(typeof(EasySecuritiesManagerDBContext))]
    partial class EasySecuritiesManagerDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EasySecuritiesManager.Domain.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountHolderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AccountHolderId");

                    b.ToTable("tAccounts");
                });

            modelBuilder.Entity("EasySecuritiesManager.Domain.Models.AssetTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateProcessed")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPurchase")
                        .HasColumnType("bit");

                    b.Property<int>("Shares")
                        .HasColumnType("int");

                    b.Property<int?>("TheAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TheAccountId");

                    b.ToTable("tAssetTransactions");
                });

            modelBuilder.Entity("EasySecuritiesManager.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateJoined")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tUsers");
                });

            modelBuilder.Entity("EasySecuritiesManager.Domain.Models.Account", b =>
                {
                    b.HasOne("EasySecuritiesManager.Domain.Models.User", "AccountHolder")
                        .WithMany()
                        .HasForeignKey("AccountHolderId");

                    b.Navigation("AccountHolder");
                });

            modelBuilder.Entity("EasySecuritiesManager.Domain.Models.AssetTransaction", b =>
                {
                    b.HasOne("EasySecuritiesManager.Domain.Models.Account", "TheAccount")
                        .WithMany("AssetTransactions")
                        .HasForeignKey("TheAccountId");

                    b.OwnsOne("EasySecuritiesManager.Domain.Models.Asset", "TheAsset", b1 =>
                        {
                            b1.Property<int>("AssetTransactionId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("DayHigh")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("DayLow")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("MarketCap")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<decimal>("PricePerShare")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("Symbol")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("TimeOfFetch")
                                .HasColumnType("datetime2");

                            b1.Property<decimal>("YearHigh")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("YearLow")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("AssetTransactionId");

                            b1.ToTable("tAssetTransactions");

                            b1.WithOwner()
                                .HasForeignKey("AssetTransactionId");
                        });

                    b.Navigation("TheAccount");

                    b.Navigation("TheAsset");
                });

            modelBuilder.Entity("EasySecuritiesManager.Domain.Models.Account", b =>
                {
                    b.Navigation("AssetTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
